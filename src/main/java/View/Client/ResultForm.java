/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Client;

import static View.Client.HomeForm.object;
import static View.Client.PlayForm.count;
import static View.Client.PlayForm.index;
import Controller.ListenServer;
import Controller.inReceiveMessage;
import Model.Game;
import Model.Message;
import static View.Client.PlayForm.game;
import View.Server.Main;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author tamng
 */
public class ResultForm extends javax.swing.JFrame implements inReceiveMessage {

    public static ListenServer listenServer = null;

    public ResultForm(ListenServer listenServer, Game game2, String s) {
        setLocationRelativeTo(null);
        this.listenServer = listenServer;
        this.listenServer.receive = this;
        initComponents();
        labelPlayer1.setText("Người chơi: " + game.getUser().getUserName());
        jLabel3.setText("Số câu đúng: " + game.getCount());
        labelTime1.setText("Thời gian: " + game.getTime());
        labelResult.setText("Kết quả: " + s);
        labelPlayer2.setText("Người chơi: " + game2.getUser().getUserName());
        labelCount2.setText("Số câu đúng: " + game2.getCount());
        labelTime2.setText("Thời gian: " + game2.getTime());
        index = 0;
        count = 0;
        Main.point = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelPlayer1 = new javax.swing.JLabel();
        labelTime1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelPlayer2 = new javax.swing.JLabel();
        labelTime2 = new javax.swing.JLabel();
        labelCount2 = new javax.swing.JLabel();
        labelResult = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnContinue = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelPlayer1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        labelPlayer1.setText("player 1");

        labelTime1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        labelTime1.setText("Thời gian : 00:01:14.341");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel3.setText("Số câu đúng: ...");

        labelPlayer2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        labelPlayer2.setText("player 2");

        labelTime2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        labelTime2.setText("Thời gian : 00:01:14.341");

        labelCount2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        labelCount2.setText("Số câu đúng:...");

        labelResult.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labelResult.setText("Kết quả: ....");

        jLabel8.setBackground(new java.awt.Color(255, 0, 0));
        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("Kết quả trận đấu");

        btnContinue.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnContinue.setText("Tiếp tục chơi");
        btnContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContinueActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelResult, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelPlayer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelTime1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnContinue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnExit)
                        .addGap(109, 109, 109))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTime2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPlayer2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCount2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel8)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPlayer2)
                    .addComponent(labelPlayer1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTime1)
                    .addComponent(labelTime2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCount2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(labelResult)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExit)
                    .addComponent(btnContinue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContinueActionPerformed

        try {
            // Send Message invite to play
            listenServer.SendMessage(20, object);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnContinueActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        //leave room game and retrun to Home Form
        try {
            listenServer.SendMessage(70, null);// Send Message to leave room
            this.setVisible(false);
            HomeForm homeForm = new HomeForm(listenServer); // direct to homeForm.
            homeForm.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultForm(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnContinue;
    private javax.swing.JButton btnExit;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel labelCount2;
    private javax.swing.JLabel labelPlayer1;
    private javax.swing.JLabel labelPlayer2;
    private javax.swing.JLabel labelResult;
    private javax.swing.JLabel labelTime1;
    private javax.swing.JLabel labelTime2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void ReceiveMessage(Message msg) throws IOException {
        switch (msg.getType()) {

            // recevie invite to continue playing
            case 30: {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn tiếp tục chơi!");
                if (dialogResult == 0) {
                    // Enter room and send message for competitor
                    listenServer.SendMessage(31, null);
                    PlayForm playForm = new PlayForm(listenServer);// Open room
                    playForm.setVisible(true);
                    this.setVisible(false);

                } else {
                    listenServer.SendMessage(32, null);// refuse invite to continue playing
                }
                break;
            }

            //Open room to play
            case 33: {
                PlayForm playForm = new PlayForm(listenServer);
                playForm.setVisible(true);
                this.setVisible(false);
                this.dispose();
                break;
            }

            // Receive message that competitor don't want to play
            case 34: {
                JOptionPane.showMessageDialog(rootPane, "Người chơi không đồng ý!");
                break;
            }
            // Notify that competitor has left room
            case 71: {
                JOptionPane.showMessageDialog(rootPane, "Đối thủ đã thoát!");
                this.setVisible(false);
                HomeForm homeForm = new HomeForm(listenServer);
                homeForm.setVisible(true);
                break;
            }
        }
    }
}
